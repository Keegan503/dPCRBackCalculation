##dPCR Data back calculation Pipeline 4-Plex##

## File path in, current location of the .csv file
FilePathIn <-"C:/Users/15079/Downloads/.csv"

##File Path out, include desired file name with .csv designation
FilePathOut <-"C:/Users/15079/Documents/.csv"

#Experimental Parameters in uL
dPCRPrepVolume = 10
NucleicAcidVol = 5
NucleicAcidExtracVol = 80
##Sample in mL
SampleExtracVol = 35

##Enter all parameters, hit control+a to select entire window, then click Run

#####################################
#####################################
##Variable names coded for ease of use
b <-dPCRPrepVolume
c <-NucleicAcidVol
d <-NucleicAcidExtracVol
e <-SampleExtracVol
x <-FilePathIn
y <-FilePathOut

##Pull Data into environment
rawdata=read.csv(file=x)
##Create Function in environment
##Working Function
#testfunc <- function(z,b,c,d,e) {
#  testfunc <- (((z*((b*d)/(c*e)))))
#  return(testfunc)
#}

##Working Function written in a different way
testfunc <- function(z,b,c,d,e) {
  testfunc <- (((((z*b)/c)*d)/e))
  return(testfunc)
}

#Attempt 1 at adding parameter names
#testfunc <- function('stacked$Conc..cp.uL','dPCRPrepVolume','NucleicAcidVol','NucleicAcidExtracVol','SampleExtracVol') {
#  testfunc <- ((((('stacked'*'dPCRPrepVolume')/'NucleicAcidVol')*'NucleicAcidExtracVol')/'SampleExtracVol'))
#  return(testfunc)
#}

###Munging V2
#Load necessary library
library(tidyverse)

#Tibble and remove summary row
tibbleplay<-(as_tibble(rawdata))
notop<-tibbleplay[-1,]

#Create a Subset with only necessary data (none of the generated summary stat columns)
concfam<-notop[1:16,c(1:8,9:15)]
conchex<-notop[1:16,c(1:8,16:22)]
conccy5<-notop[1:16,c(1:8,23:29)]
condye4<-notop[1:16,c(1:8,30:36)]

##Must rename subsets to match mother set to allow for rbind to work##
newnames=c("Run","Date","Instrument","Plate","Group","Name","Well","Total","Dye","Target","Conc..cp.uL","SD","CV.","X95.CI","Positives")
colnames(conchex)<-newnames
colnames(conccy5)<-newnames
colnames(concdye4)<-newnames

##Stack the freshly re-named subsets
stacked=rbind(concfam,conchex,conccy5,concdye4)

##Munging complete, now in same format as single plex##
#######################################################

##Execute function in environment and format results##
results <- testfunc(stacked$Conc..cp.uL,b,c,d,e)
formattedresults<-format(results, scientific = TRUE)
"FinalConc-cp/ml"<- formattedresults
unformattedresults<-results*1000
"FinalConc-cp/L"<-format(unformattedresults,scientific=TRUE)

##Create output table##
#Final<-data.frame(rawdata$SpeciemenNameColumn,rawdata$NameofOutputColumn,Results)
output=cbind(stacked,`FinalConc-cp/ml`,`FinalConc-cp/L`)

##Summary statistics##
###Need to figure out how to do paired averages without having to make a bazillion subgroups##

#Check for those will less than 3 wells (in positives column) here
QualityCheck<-ifelse(output$Positives >= 3 & output$Total >= 20000 & output$'FinalConc-cp/ml' >= (1.5),"Pass","Fail")
outputqc=cbind(output,QualityCheck)

##Arrange by given names to make grouping easier
finaloutput<-arrange(outputqc,Name)

##Save data to Specified out
write.csv(finaloutput,file= y,row.names=FALSE)

